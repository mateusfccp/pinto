let declarationBeforeImport = ()

type TypeBeforeImport = TypeBeforeImport

// An import should always come first
   import @async
// ^^^^^^^^^^^^^ misplaced_import

let properLet = ()

let properLet = ()
//  ^^^^^^^^^ identifier_already_defined

let improperFunction () _ = 10
//                      ^ expected_equality_sign_after_identifier

// It would be nice detecting this as an error, but as we don't have declaration
// terminators we can only rely on declaration keywords to synchronize
// TODO(mateusfccp): Improve error recovery (#20).
   10

let properLet = ()
//  ^^^^^^^^^ identifier_already_defined

type Option(T) = Some(T value) + None

type Option = A + B
//   ^^^^^^ identifier_already_defined

type Improper() = Improper
//            ^ expected_identifier

type Improper = Improper1(int) + Improper2(String)
//                           ^ expected_identifier_after_identifier
// TODO(mateusfccp): We should synchronize this somewhow so that Improper2 also
// emits an error (#20).
